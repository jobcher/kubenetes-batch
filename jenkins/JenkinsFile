pipeline {
    //使用标签 'node' 的节点
    agent {label 'jump'}
    //环境变量
    environment {
        JEN_PRODUCTION1 = '985web-71'
        JEN_PRODUCTION2 = '985web-72'

        //部署脚本目录
        JEN_CODE = '/root/code/sanjiang-docker-config/store-v6'
        JEN_CODE_PATH ='/root/code/sanjiang-docker-config'
        //探针地址
        JEN_PROBE1 = 'http://193.0.30.71:20033/actuator/info'

        //部署docker
        JEN_IMAGE_NAME = 'store-v6' 
    } 
    
    stages {
        stage ('build image'){
            steps {
                echo 'build image'
                sh 'cd /root/code/sanjiang-docker-config/ && git pull && git checkout master'
                sh 'ansible ${JEN_PRODUCTION1} -m synchronize -a "src=/root/code/sanjiang-docker-config dest=/root/code/ delete=yes"'
                sh 'ansible ${JEN_PRODUCTION1} -m shell -a "cd ${JEN_CODE} && sh update.sh"'
            }
        }
        stage ('check service'){
            steps {
                script {
                    retry(60) {
                        timeout(time: 1, unit: 'SECONDS') {
                            sh 'ansible ${JEN_PRODUCTION1} -m shell -a "curl ${JEN_PROBE1}"'
                        }
                    }
                }
            }
        }
        stage ('Check service') {
            steps {
                script {
                    retry(60) {
                        timeout(time: 1, unit: 'SECONDS') {
                            while (true) {
                                status = sh(script: 'curl -o /dev/null -s -w "%{http_code}" ${JEN_PROBE1}', returnStdout: true).trim()
                                if (status == '200') {
                                    echo '探针监测正常'
                                    break
                                }
                                echo '探针监测异常，等待后重试'
                                sleep(2)
                            }
                        }
                    }
                    if (status != '200') {
                        error('Service check failed')
                    }
                }
            }
        }
        stage ('deploy 2'){
            steps {
                sh 'ansible ${JEN_PRODUCTION2} -m synchronize -a "src=/root/code/sanjiang-docker-config dest=/root/code/ delete=yes"'
                sh 'ansible ${JEN_PRODUCTION2} -m shell -a "cd ${JEN_CODE} && sh update.sh"'
                echo 'run end'
            }
        }
    }


    post {
        success {
            script {
                env.DATETIME = sh(script:"date", returnStdout: true).trim()
                def job_name = "# ${JOB_NAME} 流水线 执行成功"
                def jenkinsid = """构建:  第 ${BUILD_ID} 次执行"""
                def JEN_production = "> 部署节点： ${JEN_PRODUCTION1}"
                def build_url = "> 部署详情： [详情](${BUILD_URL})"
                def jen_date = "> 执行时间： ${env.DATETIME}"

                dingtalk (
                    robot: 'e3999649-d3f8-449a-a221-4c57333a327b',
                    type: 'MARKDOWN',
                    title: job_name,
                    text: [
                        job_name,
                        jenkinsid,
                        '',
                        '---',
                        JEN_production,
                        '',
                        build_url,
                        '',
                        jen_date
                        ],
                    at: [
                        '18758363171'
                        ]
                )            
            }
        }
        
        failure {
            script {
                env.DATETIME = sh(script:"date", returnStdout: true).trim()
                def job_name = "# ${JOB_NAME} 流水线 执行失败"
                def jenkinsid = """构建:  第 ${BUILD_ID} 次执行"""
                def JEN_production = "> 部署节点： ${JEN_PRODUCTION1}"
                def build_url = "> 部署详情： [详情](${BUILD_URL})"
                def jen_date = "> 执行时间： ${env.DATETIME}"

                dingtalk (
                    robot: 'e3999649-d3f8-449a-a221-4c57333a327b',
                    type: 'MARKDOWN',
                    title: job_name,
                    text: [
                        job_name,
                        jenkinsid,
                        '',
                        '---',
                        JEN_production,
                        '',
                        build_url,
                        '',
                        jen_date
                        ],
                    at: [
                        '18758363171'
                        ]
                )            
            }
        }
    }
}
